// backend/controllers/techRepairController.js
const db = require("../config/db");
const STATUS = require("./repairStatus");

/* ======================================================
 * üë∑ ‡∏ä‡πà‡∏≤‡∏á: ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (ASSIGNED + IN_PROGRESS)
 * ====================================================== */
exports.myOpenRepairs = async (req, res) => {
  try {
    const techId = req.user.id;

    const [rows] = await db.query(
      `SELECT r.*, 
              rm.room_no, 
              u.fullname AS tenant_name
       FROM repairs r
       LEFT JOIN rooms rm ON rm.id = r.room_id
       LEFT JOIN users u ON u.id = r.tenant_id
       WHERE r.assigned_technician_id = ?
         AND r.status IN (?, ?)
       ORDER BY r.updated_at DESC`,
      [techId, STATUS.ASSIGNED, STATUS.IN_PROGRESS]
    );

    res.json(rows);
  } catch (err) {
    console.error("‚ùå myOpenRepairs error:", err);
    res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ", error: err.message });
  }
};

/* ======================================================
 * üü® ‡∏ä‡πà‡∏≤‡∏á: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
 * ====================================================== */
exports.startRepair = async (req, res) => {
  try {
    const techId = req.user.id;
    const { id } = req.params;

    const [chk] = await db.query(
      "SELECT * FROM repairs WHERE id = ? AND assigned_technician_id = ?",
      [id, techId]
    );

    if (!chk.length) return res.status(403).json({ message: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ" });
    if (chk[0].status !== STATUS.ASSIGNED)
      return res.status(400).json({ message: "‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ" });

    await db.query(
      `UPDATE repairs
       SET status = ?, started_at = NOW(), updated_at = NOW()
       WHERE id = ?`,
      [STATUS.IN_PROGRESS, id]
    );

    res.json({ message: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" });
  } catch (err) {
    console.error("‚ùå startRepair error:", err);
    res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ", error: err.message });
  }
};

/* ======================================================
 * üü© ‡∏ä‡πà‡∏≤‡∏á: ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô
 * ====================================================== */
exports.completeRepair = async (req, res) => {
  try {
    const techId = req.user.id;
    const { id } = req.params;

    const [chk] = await db.query(
      "SELECT * FROM repairs WHERE id = ? AND assigned_technician_id = ?",
      [id, techId]
    );

    if (!chk.length) return res.status(403).json({ message: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ" });
    if (chk[0].status !== STATUS.IN_PROGRESS)
      return res.status(400).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ" });

    await db.query(
      `UPDATE repairs
       SET status = ?, completed_at = NOW(), updated_at = NOW()
       WHERE id = ?`,
      [STATUS.DONE, id]
    );

    res.json({ message: "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" });
  } catch (err) {
    console.error("‚ùå completeRepair error:", err);
    res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÑ‡∏î‡πâ", error: err.message });
  }
};
