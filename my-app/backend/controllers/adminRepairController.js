// backend/controllers/adminRepairController.js
const db = require("../config/db");
const STATUS = require("./repairStatus");

/* ======================================================
 * üß± ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô: ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà (status = new)
 * ====================================================== */
exports.listNewRepairs = async (req, res) => {
  try {
    const [rows] = await db.query(
      `SELECT r.*, 
              t.fullname AS tenant_name, 
              rm.room_no
       FROM repairs r
       LEFT JOIN users t ON t.id = r.tenant_id
       LEFT JOIN rooms rm ON rm.id = r.room_id
       WHERE r.status = ?
       ORDER BY r.created_at DESC`,
      [STATUS.NEW]
    );
    res.json(rows);
  } catch (err) {
    console.error("‚ùå listNewRepairs error:", err);
    res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ", error: err.message });
  }
};

/* ======================================================
 * üß± ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô: ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß (status = assigned)
 * ====================================================== */
exports.listAssignedRepairs = async (req, res) => {
  try {
    const [rows] = await db.query(
      `SELECT r.*, 
              u.fullname AS technician_name, 
              rm.room_no
       FROM repairs r
       LEFT JOIN users u ON u.id = r.assigned_technician_id
       LEFT JOIN rooms rm ON rm.id = r.room_id
       WHERE r.status = ?
       ORDER BY r.updated_at DESC`,
      [STATUS.ASSIGNED]
    );
    res.json(rows);
  } catch (err) {
    console.error("‚ùå listAssignedRepairs error:", err);
    res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ", error: err.message });
  }
};

/* ======================================================
 * üü© ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏≤‡∏á
 * ====================================================== */
exports.assignRepair = async (req, res) => {
  try {
    const { id } = req.params;
    const { technician_id } = req.body;

    const [chk] = await db.query("SELECT * FROM repairs WHERE id = ?", [id]);
    if (!chk.length) return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏ô‡∏µ‡πâ" });

    if (chk[0].status !== STATUS.NEW) {
      return res.status(400).json({ message: "‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" });
    }

    await db.query(
      `UPDATE repairs
       SET assigned_technician_id = ?, status = ?, updated_at = NOW()
       WHERE id = ?`,
      [technician_id, STATUS.ASSIGNED, id]
    );

    res.json({ message: "‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
  } catch (err) {
    console.error("‚ùå assignRepair error:", err);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô", error: err.message });
  }
};

/* ======================================================
 * üü• ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏á‡∏≤‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
 * ====================================================== */
exports.rejectRepair = async (req, res) => {
  try {
    const { id } = req.params;
    const { reason } = req.body;

    const [chk] = await db.query("SELECT status FROM repairs WHERE id = ?", [id]);
    if (!chk.length) return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏ô‡∏µ‡πâ" });

    if (![STATUS.NEW, STATUS.ASSIGNED].includes(chk[0].status)) {
      return res.status(400).json({ message: "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" });
    }

    await db.query(
      `UPDATE repairs
       SET status = ?, rejected_reason = ?, updated_at = NOW()
       WHERE id = ?`,
      [STATUS.REJECTED, reason || null, id]
    );

    res.json({ message: "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
  } catch (err) {
    console.error("‚ùå rejectRepair error:", err);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°", error: err.message });
  }
};
